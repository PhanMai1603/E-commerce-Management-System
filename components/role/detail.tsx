/* eslint-disable @typescript-eslint/no-unused-vars */
import React from "react";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Checkbox } from "@/components/ui/checkbox";
import { RoleDetailResponse } from "@/interface/role";

const categories = ["PAGE", "MANAGE_PRODUCT", "SYSTEM", "MANAGE_ORDER", "SETTING"] as const;

const entities: { [key in typeof categories[number]]: string[] } = {
  PAGE: ["PANEL", "DASHBOARD"],
  MANAGE_PRODUCT: ["PRODUCT", "CATEGORY", "ATTRIBUTE", "SKU", "UPLOAD", "COUPON"],
  SYSTEM: ["USER", "ROLE"],
  MANAGE_ORDER: ["REVIEW", "ORDER"],
  SETTING: ["PAYMENT_TYPE", "DELIVERY_TYPE", "CITY"],
};

const actions = ["CREATE", "VIEW", "UPDATE", "DELETE"];

const categoryLabels: Record<string, string> = {
  PAGE: "Trang ch√≠nh",
  MANAGE_PRODUCT: "Qu·∫£n l√Ω s·∫£n ph·∫©m",
  SYSTEM: "H·ªá th·ªëng",
  MANAGE_ORDER: "Qu·∫£n l√Ω ƒë∆°n h√†ng",
  SETTING: "C√†i ƒë·∫∑t",
};

const entityLabels: Record<string, string> = {
  PANEL: "B·∫£ng ƒëi·ªÅu khi·ªÉn",
  DASHBOARD: "Th·ªëng k√™",
  PRODUCT: "S·∫£n ph·∫©m",
  CATEGORY: "Danh m·ª•c",
  ATTRIBUTE: "Thu·ªôc t√≠nh",
  SKU: "Bi·∫øn th·ªÉ",
  UPLOAD: "T·∫£i l√™n",
  COUPON: "M√£ gi·∫£m gi√°",
  USER: "Ng∆∞·ªùi d√πng",
  ROLE: "Vai tr√≤",
  REVIEW: "ƒê√°nh gi√°",
  ORDER: "ƒê∆°n h√†ng",
  PAYMENT_TYPE: "Ph∆∞∆°ng th·ª©c thanh to√°n",
  DELIVERY_TYPE: "H√¨nh th·ª©c giao h√†ng",
  CITY: "Th√†nh ph·ªë",
};

const actionLabels: Record<string, string> = {
  CREATE: "T·∫°o",
  VIEW: "Xem",
  UPDATE: "S·ª≠a",
  DELETE: "X√≥a",
};

interface RoleDetailsProps {
  roleDetails: RoleDetailResponse | null;
  setModalOpen: (open: boolean) => void;
}

const RoleDetails: React.FC<RoleDetailsProps> = ({ roleDetails }) => {
  if (!roleDetails) return null;

  return (
    <Card>
      <CardHeader>
        <CardTitle>Chi ti·∫øt vai tr√≤</CardTitle>
        <div className="mt-2 px-4 py-2 rounded-md bg-gray-100 text-gray-800 text-base font-semibold inline-block shadow-sm items-center gap-2">
          üõ°Ô∏è T√™n vai tr√≤: <span className="text-primary font-bold">{roleDetails.name}</span>
        </div>
      </CardHeader>
      <CardContent>
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Th·ª±c th·ªÉ</TableHead>
              {actions.map((action) => (
                <TableHead key={action} className="text-center">
                  {actionLabels[action]}
                </TableHead>
              ))}
            </TableRow>
          </TableHeader>
          <TableBody>
            {categories.map((category) => (
              <React.Fragment key={category}>
                <TableRow key={`${category}-header`}>
                  <TableCell colSpan={actions.length + 1} className="font-bold">
                    {categoryLabels[category]}
                  </TableCell>
                </TableRow>
                {entities[category].map((entity) => (
                  <TableRow key={`${category}-${entity}`}>
                    <TableCell className="pl-6">{entityLabels[entity]}</TableCell>
                    {actions.map((action) => (
                      <TableCell key={`${category}-${entity}-${action}`} className="text-center">
                        <Checkbox
                          checked={!!(roleDetails?.permissions?.[category]?.[entity]?.[action] ?? false)}
                          onClick={(e) => e.preventDefault()}
                        />
                      </TableCell>
                    ))}
                  </TableRow>
                ))}
              </React.Fragment>
            ))}
          </TableBody>
        </Table>
      </CardContent>
    </Card>
  );
};

export default RoleDetails;
